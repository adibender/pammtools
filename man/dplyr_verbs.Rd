% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidyverse-methods.R
\name{dplyr_verbs}
\alias{dplyr_verbs}
\alias{arrange}
\alias{filter}
\alias{distinct}
\alias{full_join}
\alias{group_by}
\alias{inner_join}
\alias{left_join}
\alias{mutate}
\alias{rename}
\alias{right_join}
\alias{sample_frac}
\alias{sample_n}
\alias{select}
\alias{slice}
\alias{summarise}
\alias{transmute}
\alias{ungroup}
\alias{arrange.ped}
\alias{group_by.ped}
\alias{ungroup.ped}
\alias{distinct.ped}
\alias{filter.ped}
\alias{sample_n.ped}
\alias{sample_frac.ped}
\alias{slice.ped}
\alias{select.ped}
\alias{mutate.ped}
\alias{rename.ped}
\alias{summarise.ped}
\alias{summarize.ped}
\alias{transmute.ped}
\alias{inner_join.ped}
\alias{full_join.ped}
\alias{left_join.ped}
\alias{right_join.ped}
\title{\code{dplyr} Verbs for \code{ped}-Objects}
\usage{
\method{arrange}{ped}(.data, ...)

\method{group_by}{ped}(.data, ..., .add = FALSE)

\method{ungroup}{ped}(x, ...)

\method{distinct}{ped}(.data, ..., .keep_all = FALSE)

\method{filter}{ped}(.data, ...)

\method{sample_n}{ped}(tbl, size, replace = FALSE, weight = NULL, .env = NULL, ...)

\method{sample_frac}{ped}(tbl, size = 1, replace = FALSE, weight = NULL, .env = NULL, ...)

\method{slice}{ped}(.data, ...)

\method{select}{ped}(.data, ...)

\method{mutate}{ped}(.data, ...)

\method{rename}{ped}(.data, ...)

\method{summarise}{ped}(.data, ...)

\method{summarize}{ped}(.data, ...)

\method{transmute}{ped}(.data, ...)

\method{inner_join}{ped}(x, y, by = NULL, copy = FALSE, suffix = c(".x", ".y"), ...)

\method{full_join}{ped}(x, y, by = NULL, copy = FALSE, suffix = c(".x", ".y"), ...)

\method{left_join}{ped}(x, y, by = NULL, copy = FALSE, suffix = c(".x", ".y"), ...)

\method{right_join}{ped}(x, y, by = NULL, copy = FALSE, suffix = c(".x", ".y"), ...)
}
\arguments{
\item{.data}{an  object of class \code{ped}, see \code{\link{as_ped}}.}

\item{...}{see \code{dplyr} documentation}

\item{x}{an  object of class \code{ped}, see \code{\link{as_ped}}.}

\item{tbl}{an  object of class \code{ped}, see \code{\link{as_ped}}.}

\item{size}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}>
For \code{sample_n()}, the number of rows to select.
For \code{sample_frac()}, the fraction of rows to select.
If \code{tbl} is grouped, \code{size} applies to each group.}

\item{replace}{Sample with or without replacement?}

\item{weight}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Sampling weights.
This must evaluate to a vector of non-negative numbers the same length as
the input. Weights are automatically standardised to sum to 1.}

\item{.env}{DEPRECATED.}

\item{by}{A join specification created with \code{\link[dplyr:join_by]{join_by()}}, or a character
vector of variables to join by.

If \code{NULL}, the default, \verb{*_join()} will perform a natural join, using all
variables in common across \code{x} and \code{y}. A message lists the variables so
that you can check they're correct; suppress the message by supplying \code{by}
explicitly.

To join on different variables between \code{x} and \code{y}, use a \code{\link[dplyr:join_by]{join_by()}}
specification. For example, \code{join_by(a == b)} will match \code{x$a} to \code{y$b}.

To join by multiple variables, use a \code{\link[dplyr:join_by]{join_by()}} specification with
multiple expressions. For example, \code{join_by(a == b, c == d)} will match
\code{x$a} to \code{y$b} and \code{x$c} to \code{y$d}. If the column names are the same between
\code{x} and \code{y}, you can shorten this by listing only the variable names, like
\code{join_by(a, c)}.

\code{\link[dplyr:join_by]{join_by()}} can also be used to perform inequality, rolling, and overlap
joins. See the documentation at \link[dplyr:join_by]{?join_by} for details on
these types of joins.

For simple equality joins, you can alternatively specify a character vector
of variable names to join by. For example, \code{by = c("a", "b")} joins \code{x$a}
to \code{y$a} and \code{x$b} to \code{y$b}. If variable names differ between \code{x} and \code{y},
use a named character vector like \code{by = c("x_a" = "y_a", "x_b" = "y_b")}.

To perform a cross-join, generating all combinations of \code{x} and \code{y}, see
\code{\link[dplyr:cross_join]{cross_join()}}.}

\item{copy}{If \code{x} and \code{y} are not from the same data source,
and \code{copy} is \code{TRUE}, then \code{y} will be copied into the
same src as \code{x}.  This allows you to join tables across srcs, but
it is a potentially expensive operation so you must opt into it.}

\item{suffix}{If there are non-joined duplicate variables in \code{x} and
\code{y}, these suffixes will be added to the output to disambiguate them.
Should be a character vector of length 2.}
}
\value{
a modified \code{ped} object (except for \code{do})
}
\description{
See \code{dplyr} documentation of the respective functions for
description and examples.
}
\keyword{internal}
